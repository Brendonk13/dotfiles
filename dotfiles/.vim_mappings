let mapleader = " "
" no more escape keys !!
inoremap <S-Tab> <esc>
onoremap <S-Tab> <esc>
vnoremap <S-Tab> <esc>

" allow enter key in normal mode use leader key so i don't fuck with quickfix :cw
nnoremap <leader><CR> a<CR><esc>
nnoremap <leader><BS> i<BS><esc>
" <CR> would be much better as a function which moved to beginning of word then i<CR>
" iff in cursor in the middle of word



" makes sense, even suggested in help!
nnoremap Y y$

" had a mapping that switched :,; but then loupe didn't work every now and then idk, also thats such a big mapping to make
" SHOULD I CHANGE THIS TO MAP ; : ,,, AND NOREMAP ;; ;   ---- THEN I'M DOING FOR ALL MODES, WHY NOT?
" could make a abbreviation for c-line mode so that I don't get confused?

nnoremap ; :
nnoremap ;; ;


" makes you go down line wise regardless of wrapping.
nnoremap j gj
nnoremap k gk
" allow for moving in insert mode
inoremap <C-j> <Down>
inoremap <C-h> <Left>
inoremap <C-l> <Right>
inoremap <C-k> <Up>

"http://vimcasts.org/episodes/the-edit-command/
" can automatically expand curr buffer's dir_path with %% anywhere on c-line!!
"  These are hella useful if have mult files in mult dir's open already
cnoremap %% <C-R>=fnameescape(expand('%:p:h')).'/'<cr>
map <leader>ew :e %%
map <leader>es :sp %%
map <leader>ev :vs %%
map <leader>et :tabe %%
" note that I could change the commands from edits to finds
" ^ there is no need for this since the whole point of the find 
" command is to search for files in the set'd path variable
" whereas the benefit of this command is we know we wanna open
" a file in the same, or subdir of this directory
" and I could always do set path+=%% if I really wanted to take advantage
" of the find command


" force non-usage of arrow keys
imap <Up>    <Nop>
imap <Down>  <Nop>
imap <Left>  <Nop>
imap <Right> <Nop>

" http://learnvimscriptthehardway.stevelosh.com/chapters/15.html\   has nice operator pending maps 
" https://medium.com/@sidneyliebrand/a-collection-of-vim-key-binds-4d227c9a455


"---------- WINDOW MANAGEMENT ------------
" maybe I will change this to <C-<lt>> as a normal mode mapping ... this is barely less keystrokes, just nice not to think about numbers
nnoremap <C-w>> <C-w>20>
nnoremap <C-w>2> <C-w>40>
" other direction now
nnoremap <C-w>< <C-w>20<
nnoremap <C-w>2< <C-w>40<

" easier maximization of windows!!
nnoremap <C-w>- <C-w>_

" easier window switching
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" this >> nerdtree (add netrw_liststyle=3 and behold)
nmap <leader>ls :vert topleft 15vs %%<CR>
" need to figure out netrw a bit tho ..

" map :only to <leader>o
nnoremap <leader>o :only<CR>
" close windows easily!!
nnoremap <leader>c :close<CR>
" ----------- END WINDOW MANAGEMENT -----------

" note that there are hella commands possible from with insert mode, check index!!



"------------------ SEARCH --------------------
"nnoremap <leader>/ ms/
"nnoremap <leader>? ms?    
" my excuse for not adding these before was that I'd break nerdtree/ some other plugin i'm not using
" and premature optimization is the death of all.. besides <leader>/ is unrememberable
"nnoremap / ms/
"nnoremap ? ms?

" these ^ didn't work, need to change loupe function to do: ms<bar>fxnCall

"----------------- END SEARCH ----------------

"----------------- VISUAL MODE -------------------
" this visually selects most recent paste/insert mode session
nnoremap gV `[v`]



"----------------- INSERT MODE ------------------

" this inserts a line below me from insert mode
" use '.' since I'm already using this for omni and I want minimal "lag keys"
inoremap .<CR> <esc>O
inoremap .<BS> <down><BS>
" so now enter, bs operate on lines above me, the dot variant acts on lines below current!


" for the rare times you want to stay in insert mode
inoremap <C-e> <C-o>$
inoremap <C-b> <C-o>^


" ---  omnicomplete mappings-----
inoremap .<tab> .<C-x><C-o>

" all of these omnicomplete mappings are from https://vim.fandom.com/wiki/Make_Vim_completion_popup_menu_work_just_like_in_an_IDE
:inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

"^ this one allows me to press enter instead of C-y to select item

inoremap <expr> <C-n> pumvisible() ? '<C-n>' :
\ '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'

" if I want preview window to stay open after
" then change to InsertLeave
autocmd CompleteDone * pclose

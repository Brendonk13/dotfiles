#!/usr/bin/env bash
# note that alias's in this file are at bottom

# should make a cmd called aliases which cat's the bash_aliases file then also the last lines in
# this one until it encounters a line with nada on it

[ -f "$HOME/dotfiles/bashh/from_online.sh" ] && source "$HOME/dotfiles/bashh/from_online.sh"

# moves up $1 directories
function up() {
  times=$1
  while [ "$times" -gt "0" ]; do
    cd ..
    times=$(($times - 1))
  done
}

function changeDirAndShow() {
    cd "$1" && ls -A
}


# ------------------------------- Search For input in fasd -Rfl file list or from $PWD----------------------------
alias sf=ssf
ssf() {
    rg_command='rg --column --line-number --no-heading --fixed-strings --color "always"'
    search=""
    printf -v search "%q" "$*"
    if [ $# -lt 1 ]; then
        recents="$(fasd -Rfl "$1")"
        fils="$(echo -e $recents | awk '!/(^.*\.mp4$)/{print}')"
        files=`eval $rg_command $search "{$fils[*]}" | fzf --ansi --multi --reverse | awk -F ':' '{print $1":"$2":"$3}'`
    else
        files=`eval $rg_command $search | fzf --ansi --multi --reverse | awk -F ':' '{print $1":"$2":"$3}'`
    fi

    [[ -n "$files" ]] && $VISUAL "$files"
}

# this is sick cuz it will open shit in vim also
alias o=fuzzy_xdgopen
fuzzy_xdgopen() {
    [ $# -gt 0 ] && fasd -f "$*" | xargs -0 xdg-open && return
    local file
    file="$(fasd -Rfl "$1" | fzf -1 -0 --no-sort +m)" && xdg-open "${file}" || return 1
}
[ -f "$HOME/.config/.fzf_setup.sh" ] && source "$HOME/.config/.fzf_setup.sh"



# ------------------------------- follow moved files to the dest. folder ----------------------------
function mcd() {
    if [ "$#" -lt 2 ]; then
        echo "Input files and destination for this to work jeez."
        echo "Next time enter more than 1 argument: mcd files dest."
        return
    fi
    file_destination=${@:$#}
    num_files=$#

    # num_files is originally counting files and the destination dir
    # so shift one less time than $#
    num_files=$(($num_files - 1))

    while [ "$num_files" -gt 0 ]; do
        mv "$1" "$file_destination"
        num_files=$(($num_files - 1))
        shift
    done

    echo "";  echo " ----- NEW DIR CONTAINS:";
    cd "$file_destination"
    ls
    echo ""
}



#-------------------------------------------- fuzzy search arch/AUR repositories then download --------------------------------------------
function search_packages() {
    pac_manager="$1"
    if [ "$pac_manager" == "yay" ]; then
        # "$pac_manager" -S --noconfirm "$package_name"
        yay -Slq --noconfirm | fzf -m --preview 'yay -Si {1}'| xargs -ro yay -S
        # sudo not recommended for yay installs
    else
        pacman -Slq --noconfirm | fzf -m --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S
    #     sudo "$pac_manager" -S --noconfirm "$package_name"
    fi
}

# no more friggin error sound !!!
bind 'set bell-style none'


## SMARTER TAB-COMPLETION (Readline bindings) ##
#
# Perform file completion in a case insensitive fashion
bind "set completion-ignore-case on"

# Treat hyphens and underscores as equivalent
bind "set completion-map-case on"

# Display matches for ambiguous patterns at first tab press
bind "set show-all-if-ambiguous on"

# Don't record some commands -- who cares if they only show up once!
#export HISTIGNORE="&:[ ]*:exit:ls:history:clear"

" idea:

augroup custom_msg_highlights
    autocmd!
    autocmd Syntax * syn match MyTodo /\v<(FIXME|FixMe|fixme|IDEA|Idea|idea|NOTE|Note|note|TODO|Todo|todo|OPTIMIZE|Optimize|optimize):/
          \ containedin=.*Comment,vimCommentTitle

    " URL's
    autocmd Syntax * syn match Link /\v<(Link|Links|LINK|LINKS):/
          \ containedin=.*Comment,vimCommentTitle
    autocmd Syntax * syn match URL /\v<(http[s]?:\/\/[^ ]+>)/
          \ containedin=.*Comment,vimCommentTitle

    autocmd Syntax * syn match Memorize /\v:<(mem|Mem|MEM)/
          \ containedin=.*Comment,vimCommentTitle

    autocmd Syntax * syn match Hack /\v:<(hack|Hack|HACK)/
          \ containedin=.*Comment,vimCommentTitle

    autocmd Syntax * syn match Example /\v<(Ex|ex|EX|ie|Ie|IE|i\.e)(:|\.\)).*$/
          \ containedin=.*Comment,vimCommentTitle

    " order: ^(\s*)$<space><letter>(.*)
    autocmd Syntax * syn match Cmd /\v^(\s*)\$ [a-zA-Z](.+)$/
          \ containedin=.*Comment,vimCommentTitle

    " /\v(([^-]-[a-zA-Z0-9]+)|([^-]--[a-zA-Z0-9]+)): 
    " autocmd Syntax * syn match FlagExplanation /\v(\s*)\-(\-?)([a-zA-Z0-9]+): /

    " only match -flag:<space> and --flag:<space> NOT: ---flag or any other # of -'s
    autocmd Syntax * syn match FlagExplanation /\v^\s*([^-](-|--))[a-zA-Z0-9-]+: /
          \ containedin=.*Comment,vimCommentTitle

    " autocmd Syntax * syn match NumberedList /\v(\d+\.)(\w*\.)?(\d*\.)? /
    " must be at beginning of line, 1.11.a, 2.a.2 work, 2 ltrs in a row does not
    " can match trailing [: .]
    autocmd Syntax * syn match NumberedList /\v^\s*(\d+\.)(\w|(\d+))?(\.(\w|(\d+)))?([: .] )?/
          \ containedin=.*Comment,vimCommentTitle

    " TODO: make (\n\s+)1.5% not be highlighted


    autocmd Syntax * syn match ListHeader /\v^.+:$(\n\s*)*(0|1)\./
          \ containedin=.*Comment,vimCommentTitle

    " autocmd Syntax * syn match ExampleTwo /\v<(Ex|ex|EX|ie|Ie|IE|i\.e):/
    "       \ containedin=.*Comment,vimCommentTitle
augroup END

" from bottom of: https://stackoverflow.com/questions/4097259/in-vim-how-do-i-highlight-todo-and-fixme

" Colors are chosen from vim-solarized groups for vim files (idk which ones)
highlight LinkColor            cterm=NONE gui=bold ctermfg=4  guifg=#268bd2 ctermbg=NONE guibg=NONE
highlight URL_Color            cterm=NONE gui=NONE ctermfg=13 guifg=#6c71c4 ctermbg=NONE guibg=NONE
highlight MemorizeColor        cterm=NONE gui=NONE ctermfg=13 guifg=#00cd9a ctermbg=NONE guibg=NONE
highlight ExampleColor         cterm=NONE gui=NONE ctermfg=13 guifg=#CCCCCC ctermbg=NONE guibg=NONE
highlight HackColor            cterm=NONE gui=NONE ctermfg=13 guifg=#cc5e22 ctermbg=NONE guibg=NONE

highlight WhiteHeader          cterm=NONE gui=bold ctermfg=13 guifg=#CCCCCC ctermbg=NONE guibg=NONE

highlight CmdColor             cterm=NONE gui=NONE ctermfg=13 guifg=#00ad7a ctermbg=NONE guibg=NONE
highlight FlagExplanationColor cterm=NONE gui=NONE ctermfg=13 guifg=#00a572 ctermbg=NONE guibg=NONE


highlight def link Link             LinkColor
highlight def link URL              URL_Color
highlight def link UrlNoSpell       URL_Color

highlight def link MyTodo           Todo
highlight def link Memorize         MemorizeColor
highlight def link Example          ExampleColor
highlight def link Hack             HackColor

highlight def link Cmd              CmdColor
highlight def link FlagExplanation  FlagExplanationColor
highlight def link NumberedList     WhiteHeader
highlight def link ListHeader       WhiteHeader



hi clear SpellBad
highlight SpellBad guifg=#BA0C2E gui=italic
" highlight Search guifg=#F05000 gui=italic,bold
highlight Search guifg=#B02000 gui=italic,underline
" highlight IncSearch guifg=#BA0C2E gui=italic

highlight MatchParen guibg=#006b6b guifg=#D8DEE9





augroup NaturalLanguage
    autocmd!
    autocmd BufRead,BufNewFile *.md,*.rst,*.txt,*.tex setlocal spell spelllang=en_us
    autocmd FileType gitcommit setlocal spell spelllang=en_us
    " no spellcheck in help files
    autocmd FileType help setlocal nospell
    autocmd FileType markdown setlocal commentstring=[//]:\ #\ (%s)
    " Don't show URL's as incorrectly spelled
    autocmd BufRead,BufNewFile *.md,*.rst,*.txt,*.tex syn match UrlNoSpell "\w\+:\/\/[^[:space:]]\+" contains=@NoSpell
augroup END

" function! s:deleteLatexGarb()
"     let fil = "Dispatch! latexmk -c l:fil" . "expand('<afile>')"
"     silent execute fil
" endfunction

" function ContinuousCompile

" needed to have vimtex automatically go to certain lines in pdf (forward searching)
if empty(v:servername) && exists('*remote_startserver')
    call remote_startserver('VIM')
endif

let g:vimtex_compiler_method = 'latexmk'
let g:latex_view_general_viewer = "zathura"
let g:vimtex_view_method = "zathura"
" The quickfix window is opened automatically when there are errors,
" but it does not become the active window.
let g:vimtex_quickfix_mode = 2

if has('nvr') " use this ??
" if has('nvim')
let g:vimtex_compiler_progname = 'nvr'
endif
" let g:vimtex_log_verbose = 0
" let g:vimtex_log_ignore = ['^Success.*']
" let g:vimtex_quickfix_open_on_warning = 0
" let g:vimtex_quickfix_ignore_filters = [
"       \ '\v^Success.*',
"       \]

let g:vimtex_view_forward_search_on_start = 0

" =========== conceal stuff like $...$ =========================
" One of the neosnippet plugins will conceal symbols in LaTeX which is confusing
let g:tex_conceal = ""
set conceallevel=1
let g:tex_conceal='abdmg'
" =========== conceal stuff like $...$ =========================

let g:tex_comment_nospell = 1

" lint: :compiler chktex|Make!

" let g:vimtex_quickfix_latexlog = {
"           \ 'default' : 1,
"           \ 'fix_paths' : 0,
"           \ 'general' : 1,
"           \ 'references' : 1,
"           \ 'overfull' : 1,
"           \ 'underfull' : 1,
"           \ 'font' : 1,
"           \ 'packages' : {
"           \   'default' : 1,
"           \   'natbib' : 1,
"           \   'biblatex' : 1,
"           \   'babel' : 1,
"           \   'hyperref' : 1,
"           \   'scrreprt' : 1,
"           \   'fixltx2e' : 1,
"           \   'titlesec' : 1,
"           \ },
"           \}

let g:UltiSnipsExpandTrigger="<S-tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" let g:UltiSnipsSnippetsDir="~/new_dotfiles/vim/plugins/pc/ultisnips/my_snips"
let g:UltiSnipsSnippetDirectories = [ '~/new_dotfiles/vim/plugins/pc/ultisnips/my_snips']


" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"


augroup latex
  autocmd!
  " TODO: turn this into a function which opens pdf in left/right of curr i3
  " window.
  autocmd BufRead,BufNewFile *.tex compiler chktex
  " autocmd BufWritePost *.tex silent exec "Dispatch! latexmk -pdf -pvc %"
augroup END


augroup marks
  autocmd!
  " autocmd BufLeave *.css,*.less,*scss normal! mC
  " C# files
  autocmd BufLeave *.cs               normal! mC
  " autocmd BufLeave *.html             normal! mH
  autocmd BufLeave *.java             normal! mJ
  autocmd BufLeave *.py               normal! mP
  " autocmd BufLeave vimrc,*.vim      normal! mV
  " Ocaml, lexers, parsers
  autocmd BufLeave *.ml,*.mll,*.mly   normal! mO
augroup END


augroup Csharp
  autocmd!
  autocmd Filetype cs setlocal commentstring=//\ %s
augroup END

augroup vimFiles
  autocmd!
  autocmd Bufread */vimm/* setlocal shiftwidth=2 tabstop=2 softtabstop=2 ft=vim
  autocmd Bufread ~/dotfiles/.vim_mappings setlocal shiftwidth=2 tabstop=2 softtabstop=2 ft=vim
augroup END

augroup python
  autocmd!
  autocmd Filetype python nnoremap <buffer> dc mt^"_2x`t2h
  autocmd Filetype python nnoremap <buffer> yc mtI# <esc>`t2l
augroup END

augroup ocaml
  autocmd!
  autocmd Filetype ocaml setlocal commentstring=(*\ %s\ *)
  autocmd BufRead,BufNewFile *.ml,*.mli,*.mly,*.mll compiler ocaml
augroup END

augroup java
  autocmd!
  " add delete and add comments, add == yc supposed to be similar
  " to how we add in surround plugin
  autocmd Filetype java,cs nnoremap <buffer> dc mt^"_3x`t3h
  autocmd Filetype java,cs nnoremap <buffer> yc mtI// <esc>`t3l
  " have seen a disorienting ammount of tabs in project
  autocmd Filetype java setlocal nolist
  autocmd Filetype java set makeprg=javac\ %
  set errorformat=%A%f:%l:\ %m,%-Z%p^,%-C%.%#
augroup END

augroup xml
  autocmd!
  autocmd Filetype xml,yaml,html setlocal shiftwidth=2 tabstop=2 softtabstop=2
  "autocmd FileType xml setlocal foldmethod=indent foldlevelstart=999 foldminlines=0
augroup END


augroup make
  autocmd!
  autocmd Filetype make setlocal shiftwidth=2 tabstop=2 softtabstop=2 expandtab
  "autocmd FileType xml setlocal foldmethod=indent foldlevelstart=999 foldminlines=0
augroup END

" augroup shaders
"   autocmd!
"   autocmd Filetype fp, vp set ft=java 
" augroup END

autocmd! User GoyoEnter nested call <SID>goyo_enter()
autocmd! User GoyoLeave nested call <SID>goyo_leave()

function! s:goyo_enter()
  setlocal noshowmode
  setlocal noshowcmd
  setlocal scrolloff=999

  " I use goyo/limelight for prose, this helps it work as a checklist
  nnoremap <buffer> dx mt0rüóπ <ESC>`t
  nnoremap <buffer> dy mtI‚òê  <ESC>`tW
  Limelight
  " ...
endfunction

function! s:goyo_leave()
  " setlocal showmode
  setlocal showcmd
  setlocal scrolloff=1
  nunmap <buffer> dx
  Limelight!
  " ...
endfunction

" delete fugitive buffers to avoid clogging buffer list.
autocmd BufReadPost fugitive://* set bufhidden=delete

" avoid duplicate netrw buffers
autocmd FileType netrw setlocal bufhidden=wipe


" this is meant to change the background of listchar, doesn't work for
" linebreak char :(
" highlight SpecialKey guibg=#000211


" https://stackoverflow.com/questions/16987362/how-to-get-vim-to-highlight-non-ascii-characters
" was trying to have a special highlight for showbreak so it's background
" becomes black upon winleave
" highlight nonascii guibg=Red ctermbg=1 term=standout
" au BufReadPost * syntax match nonascii "[^\u2937]" containedin=ALL contained

augroup BackgroundHighlight
    autocmd!
    autocmd! WinEnter * setlocal colorcolumn=0 cursorline

    autocmd! WinLeave * setlocal nocursorline colorcolumn=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240
    " guibg=#111212 ish -- kinda black
    autocmd WinLeave * highlight ColorColumn guibg=#000211 ctermbg=gray ctermfg=gray
augroup END


" for some reason my hacky colorcolumn does not work with functions.
"function! ColorColsTill(n)
"  silent! setlocal nocursorline
"  let count=1
"  while count<=a:n
"    silent! set cc += count
"    "set cc+=count
"    let count+=1
"  endwhile
"endfunction

"function Turn


"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254

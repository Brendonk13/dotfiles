
base_dir="$HOME/.history_copies"
backup_dir="$base_dir/backups"

next_backup_num="$(cat $base_dir/curr_num.txt)"

next_backup_num=$(($next_backup_num + 1))

# echo $backup_num

# store up to 6 backups: hist_backup_0,hist_backup_1,...hist_backup_5
# want to use less than 10 files for everything so that looping alphabetically over files works
output_postfix=6
merged_history="$backup_dir/hist_backup_$output_postfix.txt"

delete_old_files(){
    # delete all the tmp merge files and previous saved histories
    for filename in $backup_dir/*; do
        if [ $filename = "$backup_dir/hist_backup_10.txt" ]; then
            # echo "SKIPPING: $filename"
            continue
        else
            # echo "Removing: $filename"
            rm $filename
        fi
    done
}

merge_backup_histories() {
    just_backed_up=0
    for first_made_backup in $backup_dir/*; do
        for other_backup in $backup_dir/*; do
            # echo "file: $first_made_backup,    $other_backup"
            if [ $first_made_backup = $other_backup ]; then
                continue
            fi
            # first iteration: awk backup_0.txt backup1.txt >  hist_backup_6.txt
            # second iteration: awk hist_backup_6 backup2.txt >  hist_backup_7.txt
            # third iteration: awk hist_backup_7 backup3.txt >  hist_backup_8.txt
            # order matters for history lookups
            if [ $just_backed_up -ge 1 ]; then
                # 2: this will be hist_backup_100
                # 3: hist_backup_101
                first_made_backup="$merged_history"
                output_postfix=$(($output_postfix + 1))
                merged_history="$backup_dir/hist_backup_$output_postfix.txt"
            fi
            # echo -e "------ first one is: $first_made_backup \n second is: $other_backup \n output file: $merged_history"

            # combine bash histories and output to merged_history file
            awk '!a[$0]++' $first_made_backup $other_backup > $merged_history
            just_backed_up=$(($just_backed_up + 1))
        done
        break
    done
}

#TODO: add checks for if the numbering scheme is off

if [ $next_backup_num -eq 6 ]; then
    merge_backup_histories
    delete_old_files
    echo "0" > $base_dir/curr_num.txt
else
    echo "$next_backup_num"
    echo "new file name: $backup_dir/hist_backup_$next_backup_num"
    cp $HOME/.bash_history  "$backup_dir/hist_backup_$next_backup_num"
    echo "$next_backup_num" > $base_dir/curr_num.txt
fi

